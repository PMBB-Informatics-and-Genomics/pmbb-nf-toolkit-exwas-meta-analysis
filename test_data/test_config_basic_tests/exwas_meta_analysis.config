params {
    // Map the overall "analyses" (meta-analysis combinations) to cohort/study population lists
    analyses = [
        'ALL': ['POP1', 'POP2', 'POP3'],
        'Leave_2_Out': ['POP1', 'POP3']
    ]

    // Executable for python
    my_python = '/opt/conda/bin/python'

    // Lists of phenotypes
    bin_pheno_list =  ['bin_PHENO1', 'bin_PHENO2']
    quant_pheno_list = ['quant_PHENO1', 'quant_PHENO2']

    // Pre- and Post-Processing Params (probably starts with .)
    regions_sumstats_suffix = '.regions.sumstats.sim.gz'
    singles_sumstats_suffix = '.singles.sumstats.sim.gz'

    // Top-Hits tables will be filtered to this p-value
    p_cutoff_summarize = 0.01
    // this is for getting ENSEMBL gene symbols and coordinates for summary stats and plotting
    // tab-separated, columns include: gene_id, chromosome, seq_region_start, seq_region_end, gene_symbol
    gene_location_file = "{launchDir}/test_data_gene_loc.txt"

    // Meta-Analysis Test Info
    regions_info_cols = [
        'region': 'REGION',
        'annot_group': 'ANNOT',
        'max_maf': 'MAX_MAF',
        'n': 'N',
        'n_case': 'N_CASES',
        'n_control': 'N_CONTROLS'
    ]

    // Single-Variant Test Info
    singles_info_cols = [
        'chr': '#CHROM',
        'pos': 'BP',
        'effect_allele': 'A1',
        'other_allele': 'A2',
        'n': 'N',
        'n_case': 'N_CASES',
        'n_control': 'N_CONTROLS'
    ]

    // set any of these column parameters to null 
    // if you don't want to meta-analyze those effects
    burden_cols = ['beta': 'BETA', 'se': 'SE', 'p_value' : 'P']
    skat_p_col = null
    skato_p_col = null
    singles_effect_cols = ['beta': 'BETA', 'se': 'SE', 'p_value': 'P']

    // Options for which tests to run
    tests_to_run = [
        'fishers' : true,
        'one_tailed_weighted_fishers': true,
        'two_tailed_weighted_fishers': false,
        'cauchy' : true,
        'one_tailed_stouffer': true,
        'two_tailed_stouffer' : true,
        'heterogeneity' : true,
        'inverse_variance_weighted' : true
    ]

    // Annotate single rare variants with nearest gene (should be the gene it's in)
    annotate = true

    // The following arguments go with annotate=true and will be used by the biofilter_wrapper sub-workflow
    biofilter_build = '38' // can be 19 or 38
    biofilter_loki = '/path/to/data/loki.db'
    biofilter_script = '/app/biofilter.py' // Must be an executable python file
    biofilter_close_dist = 5E4 // How "close" to a gene a variant should be to be considered "close" vs "far"
}